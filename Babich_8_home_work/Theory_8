(0-1, 3). Шаблон класса и аргументы
	
	Шаблон класса - это способ описания класса, чьи экземпляры зависят от типов данных и нетипизированных параметров. 
	Шаблоны копируют уже написанный код с использованием указанных параметров. На нетипизированные параметры есть ограничения:
они могу быть только целочисленного типа, перечислимого, ссылкой или указателем. На количесвто параметров нет ограничения.

2. Рекурсивные шаблоны

	Шаблоны можно использовать рекурсивно, например 

	Array<Array<int, 5>, 10> sqrArray; // все равно, что int[10][5] sqrArray; 

4. Параметры по умолчанию

	Можно задавать значения параметров по умолчанию, приравнивая их к конкертному типу иил значению:

	template<typename T, size_t Size>
	Array<T = int, Size = 15>;

	Тогда если при инициализации экземпляра класса не будет казан тип или размер, то будут использованы значения
по умолчанию.

5. Специализация шаблонов

	Специализация шаблонов нужна, если инструкции шаблона класса (шаблона функции) должны отличаться для некоторого параметра. Специализация позволяет определить поведение шаблона класса (шаблона функции) спецефических параметров. Например

	template <> class Array <char, 10> // полная специализация
	{...};

	template <> class Array <T, 10> // неполная специализация 

Если при создании экземпляра подходят 2 специализации, выбирается более полная.

6. Можно передать только iMc, т.к. dMc имеет совсем другой тип.

7. Передается только первый объект, потому что второй не подходит по типу.
