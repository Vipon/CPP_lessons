0. Сигнатура фунции это ее описание, т.е. набор из типа возвращаемого
значения, имени и числа и типа передаваемых параметров:
int sum(int a, int b);

1. Полиморфизм это применение одного и того же интерфейса для различный
действий в программе, иными словами, когда один и тот же код может быть
применен для реализации различных задач, например:

2. Перегрузка фенкций - использование одного имени для различных функций.
Перегрузить функцию можно:
	Указав различные типы параметров: void name(int a); и void name(char c);
	это различные функции, и при вызове name('c'); вызовется вторая,
	а при вызове name(2); - первая.
	Указав различное число параметров: void name(int a, int b); и void name(int a);
	это различные функции, и при вызове name(2); вызовется вторая,
	а при вызове name(2, 1); - первая.

3. Аргументы по умолчанию используют заданное значение если иное не указано
при вызове. Например:
void func(int a, int b, int c = 0);
При вызове: func(12, 10); a = 12, b = 10, c = 0
А при: func(12, 10, 14); a = 12, b =10, c = 14

4. Шаблон функции - это инструкция создания функции с определенным набором
парметров для различных типов данных. Нужен для написания одной и той же
функции для различных типов данных универсально один раз, при этом шаблон
не является функцией: при вызове функции по шаблону, компилятор считывает
типы переменных в вызове и инструкции шаблона с действиями над ними. Таким
образом шаблон это не одна функция, а то количество ее копий, для скольких
различных комбинаций типов она была вызвана в программе.
template <typename T>, далее пишется сама функция с шаблоном типа Т.
В шаблоне фиксированное число параметров.

5. Явная специализация шаблона - своеобразное исключение для шаблона,
специализированное определение функции.
template <> void func<int>(int a, int b); Таким оброзом для T = int
будет выполняться свой шаблон, отличный от объявленного ранее.

6. Ссылка - тип данных который представляет альтернативное имя переменной.
Подобна указателю, но по методу работы идентична самой переменной(автоматически разыменована). Ссылка обязательно инициализирована, не может
быть переприсвоена.

7. inline используется для увеличения производительности программы: при
добавлении ключевого inline к определению функции она не вызываться, а ее
тело просто скопируется в место вызова. Полезно, когда функция состоит из
малого число строк и часто вызывается в программе.

8.  auto - ключевое слово, используемое для автоматического определения
типа инициализированной переменной по ее значению:
auto val = 14.5;
auto num = 1;
В результате переменная val имеет тип double, а num - int. Используется
только для инициализированных переменных.
decltype (b) a; - ключевое слово, присваивающее переменной a тип
переменной b